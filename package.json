{
	"name": "vscode-code-log-plus",
	"displayName": "CodeLog+",
	"description": "CodeLog+ is a powerful extension for Visual Studio Code that simplifies the process of adding, managing, and customizing log statements in your code. It supports multiple programming languages and provides a user-friendly interface for inserting and editing log statements.",
	"version": "1.8.0",
	"icon": "icon.png",
	"license": "MIT",
	"publisher": "imgildev",
	"author": "ManuelGil",
	"sponsor": {
		"url": "https://github.com/sponsors/ManuelGil"
	},
	"engines": {
		"vscode": "^1.88.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"add log",
		"add logs",
		"code debugging",
		"comment log",
		"comment logs",
		"console.assert",
		"console.clear",
		"console.count",
		"console.debug",
		"console.dir",
		"console.error",
		"console.group",
		"console.info",
		"console.log",
		"console.memory",
		"console.profile",
		"console.table",
		"console.time",
		"console.trace",
		"console.warn",
		"cpp",
		"csharp",
		"custom log",
		"custom logs",
		"customizable logging",
		"dart",
		"debug console",
		"debug helper",
		"debug insertion",
		"debug log",
		"debug logs",
		"debug output",
		"debug print",
		"debug template",
		"debug",
		"debugging",
		"elixir",
		"go",
		"haskell",
		"highlight log",
		"highlight logs",
		"insert log",
		"insert logs",
		"java",
		"javascript",
		"kotlin",
		"log automation",
		"log formatting",
		"log generator",
		"log helper",
		"log insertion",
		"log level",
		"log shortcuts",
		"log statement",
		"log statements",
		"log template",
		"lua",
		"perl",
		"php",
		"print statement",
		"python",
		"remove log",
		"remove logs",
		"ruby",
		"runtime log",
		"scala",
		"swift",
		"turbo console log",
		"typescript",
		"uncomment log",
		"uncomment logs",
		"vscode"
	],
	"homepage": "https://github.com/ManuelGil/vscode-code-log-plus",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ManuelGil/vscode-code-log-plus.git"
	},
	"bugs": {
		"url": "https://github.com/ManuelGil/vscode-code-log-plus/issues"
	},
	"activationEvents": [],
	"main": "./out/extension.js",
	"l10n": "./l10n",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "CodeLog+ Configuration",
			"properties": {
				"codeLogPlus.enable": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%codeLogPlus.enable.description%"
				},
				"codeLogPlus.defaultLanguage": {
					"type": "string",
					"default": "javascript",
					"enum": [
						"javascript",
						"typescript",
						"java",
						"csharp",
						"php",
						"dart",
						"python",
						"cpp",
						"ruby",
						"go",
						"kotlin",
						"swift",
						"scala",
						"lua",
						"perl",
						"elixir",
						"haskell"
					],
					"enumDescriptions": [
						"JavaScript",
						"TypeScript",
						"Java",
						"C#",
						"PHP",
						"Dart",
						"Python",
						"C++",
						"Ruby",
						"Go",
						"Kotlin",
						"Swift",
						"Scala",
						"Lua",
						"Perl",
						"Elixir",
						"Haskell"
					],
					"scope": "resource",
					"description": "%codeLogPlus.defaultLanguage.description%"
				},
				"codeLogPlus.logCommand": {
					"type": "string",
					"default": "",
					"scope": "resource",
					"description": "%codeLogPlus.logCommand.description%"
				},
				"codeLogPlus.isLogMessageWrapped": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%codeLogPlus.isLogMessageWrapped.description%"
				},
				"codeLogPlus.borderWrapCharacter": {
					"type": "string",
					"default": "-",
					"scope": "resource",
					"description": "%codeLogPlus.borderWrapCharacter.description%"
				},
				"codeLogPlus.borderWrapLength": {
					"type": "number",
					"default": 20,
					"minimum": 1,
					"scope": "resource",
					"description": "%codeLogPlus.borderWrapLength.description%"
				},
				"codeLogPlus.logMessagePrefix": {
					"type": "string",
					"default": "üîç",
					"scope": "resource",
					"description": "%codeLogPlus.logMessagePrefix.description%"
				},
				"codeLogPlus.useAccessibleLogs": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%codeLogPlus.useAccessibleLogs.description%"
				},
				"codeLogPlus.messageLogDelimiter": {
					"type": "string",
					"default": "~",
					"scope": "resource",
					"description": "%codeLogPlus.messageLogDelimiter.description%"
				},
				"codeLogPlus.messageLogSuffix": {
					"type": "string",
					"default": ":",
					"scope": "resource",
					"description": "%codeLogPlus.messageLogSuffix.description%"
				},
				"codeLogPlus.isSemicolonRequired": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%codeLogPlus.isSemicolonRequired.description%"
				},
				"codeLogPlus.addEmptyLineBeforeLogMessage": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%codeLogPlus.addEmptyLineBeforeLogMessage.description%"
				},
				"codeLogPlus.addEmptyLineAfterLog": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%codeLogPlus.addEmptyLineAfterLog.description%"
				},
				"codeLogPlus.useSingleQuotes": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%codeLogPlus.useSingleQuotes.description%"
				},
				"codeLogPlus.literalOpen": {
					"type": "string",
					"default": "{",
					"scope": "resource",
					"description": "%codeLogPlus.literalOpen.description%"
				},
				"codeLogPlus.literalClose": {
					"type": "string",
					"default": "}",
					"scope": "resource",
					"description": "%codeLogPlus.literalClose.description%"
				},
				"codeLogPlus.highlightColor": {
					"type": "string",
					"default": "#FFD700",
					"scope": "resource",
					"description": "%codeLogPlus.highlightColor.description%"
				},
				"codeLogPlus.highlightStyle": {
					"type": "string",
					"default": "wavy",
					"enum": [
						"solid",
						"double",
						"dotted",
						"dashed",
						"wavy"
					],
					"enumDescriptions": [
						"Solid Line",
						"Double Line",
						"Dotted Line",
						"Dashed Line",
						"Wavy Line"
					],
					"scope": "resource",
					"description": "%codeLogPlus.highlightStyle.description%"
				},
				"codeLogPlus.customLogTemplates": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"language": {
								"type": "string",
								"enum": [
									"javascript",
									"typescript",
									"java",
									"csharp",
									"php",
									"dart",
									"python",
									"cpp",
									"ruby",
									"go",
									"kotlin",
									"swift",
									"scala",
									"lua",
									"perl",
									"elixir",
									"haskell"
								],
								"enumDescriptions": [
									"JavaScript",
									"TypeScript",
									"Java",
									"C#",
									"PHP",
									"Dart",
									"Python",
									"C++",
									"Ruby",
									"Go",
									"Kotlin",
									"Swift",
									"Scala",
									"Lua",
									"Perl",
									"Elixir",
									"Haskell"
								],
								"description": "%codeLogPlus.customLogTemplates.language.description%"
							},
							"template": {
								"type": "string",
								"description": "%codeLogPlus.customLogTemplates.template.description%"
							}
						},
						"required": [
							"language",
							"template"
						]
					},
					"default": [],
					"scope": "resource",
					"description": "%codeLogPlus.customLogTemplates.description%"
				},
				"codeLogPlus.files.includedFilePatterns": {
					"type": "array",
					"default": [
						"**/*.{js,jsx,ts,tsx}"
					],
					"scope": "resource",
					"description": "%codeLogPlus.files.includedFilePatterns.description%"
				},
				"codeLogPlus.files.excludedFilePatterns": {
					"type": "array",
					"default": [
						"**/node_modules/**",
						"**/dist/**",
						"**/out/**",
						"**/build/**",
						"**/vendor/**"
					],
					"scope": "resource",
					"description": "%codeLogPlus.files.excludedFilePatterns.description%"
				},
				"codeLogPlus.files.maxSearchRecursionDepth": {
					"type": "number",
					"default": 0,
					"scope": "resource",
					"description": "%codeLogPlus.files.maxSearchRecursionDepth.description%"
				},
				"codeLogPlus.files.supportsHiddenFiles": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%codeLogPlus.files.supportsHiddenFiles.description%"
				},
				"codeLogPlus.files.preserveGitignoreSettings": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%codeLogPlus.files.preserveGitignoreSettings.description%"
				},
				"codeLogPlus.files.includeFilePath": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%codeLogPlus.files.includeFilePath.description%"
				}
			}
		},
		"commands": [
			{
				"command": "codeLogPlus.insertLog",
				"title": "%codeLogPlus.insertLog.title%",
				"category": "codeLog+"
			},
			{
				"command": "codeLogPlus.editLogs",
				"title": "%codeLogPlus.editLogs.title%",
				"category": "codeLog+"
			},
			{
				"command": "codeLogPlus.removeLogs",
				"title": "%codeLogPlus.removeLogs.title%",
				"category": "codeLog+"
			},
			{
				"command": "codeLogPlus.highlightLogs",
				"title": "%codeLogPlus.highlightLogs.title%",
				"category": "codeLog+"
			},
			{
				"command": "codeLogPlus.clearHighlights",
				"title": "%codeLogPlus.clearHighlights.title%",
				"category": "codeLog+"
			},
			{
				"command": "codeLogPlus.commentLogs",
				"title": "%codeLogPlus.commentLogs.title%",
				"category": "codeLog+"
			},
			{
				"command": "codeLogPlus.uncommentLogs",
				"title": "%codeLogPlus.uncommentLogs.title%",
				"category": "codeLog+"
			},
			{
				"command": "codeLogPlus.listLogView.refreshList",
				"title": "%codeLogPlus.listLogView.refreshList.title%",
				"category": "codeLog+",
				"icon": "$(refresh)"
			}
		],
		"keybindings": [
			{
				"key": "ctrl+alt+l",
				"command": "codeLogPlus.insertLog",
				"when": "editorTextFocus",
				"description": "Insert log statement for selected variable (Windows & Linux)"
			},
			{
				"key": "cmd+alt+l",
				"command": "codeLogPlus.insertLog",
				"when": "editorTextFocus",
				"description": "Insert log statement for selected variable (macOS)"
			},
			{
				"key": "ctrl+alt+shift+l",
				"command": "codeLogPlus.removeLogs",
				"when": "editorTextFocus",
				"description": "Remove all inserted log statements (Windows & Linux)"
			},
			{
				"key": "cmd+alt+shift+l",
				"command": "codeLogPlus.removeLogs",
				"when": "editorTextFocus",
				"description": "Remove all inserted log statements (macOS)"
			},
			{
				"key": "ctrl+alt+k",
				"command": "codeLogPlus.highlightLogs",
				"when": "editorTextFocus",
				"description": "Highlight all inserted log statements (Windows & Linux)"
			},
			{
				"key": "cmd+alt+k",
				"command": "codeLogPlus.highlightLogs",
				"when": "editorTextFocus",
				"description": "Highlight all inserted log statements (macOS)"
			},
			{
				"key": "ctrl+alt+shift+k",
				"command": "codeLogPlus.clearHighlights",
				"when": "editorTextFocus",
				"description": "Unhighlight all previously highlighted log statements (Windows & Linux)"
			},
			{
				"key": "cmd+alt+shift+k",
				"command": "codeLogPlus.clearHighlights",
				"when": "editorTextFocus",
				"description": "Unhighlight all previously highlighted log statements (macOS)"
			},
			{
				"key": "ctrl+alt+,",
				"command": "codeLogPlus.commentLogs",
				"when": "editorTextFocus",
				"description": "Comment out all inserted log statements (Windows & Linux)"
			},
			{
				"key": "cmd+alt+,",
				"command": "codeLogPlus.commentLogs",
				"when": "editorTextFocus",
				"description": "Comment out all inserted log statements (macOS)"
			},
			{
				"key": "ctrl+alt+shift+,",
				"command": "codeLogPlus.uncommentLogs",
				"when": "editorTextFocus",
				"description": "Uncomment all previously commented log statements (Windows & Linux)"
			},
			{
				"key": "cmd+alt+shift+,",
				"command": "codeLogPlus.uncommentLogs",
				"when": "editorTextFocus",
				"description": "Uncomment all previously commented log statements (macOS)"
			}
		],
		"menus": {
			"editor/context": [
				{
					"command": "codeLogPlus.insertLog",
					"group": "1_modification",
					"when": "editorTextFocus"
				}
			],
			"view/title": [
				{
					"command": "codeLogPlus.listLogView.refreshList",
					"when": "view == codeLogPlus.listLogView",
					"group": "navigation"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "codeLogPlus.listLogView",
				"contents": "%codeLogPlus.listLogView.welcomeMessage%"
			}
		],
		"views": {
			"explorer": [
				{
					"id": "codeLogPlus.listLogView",
					"name": "%codeLogPlus.listLogView.title%",
					"visibility": "visible",
					"icon": "$(list-tree)"
				}
			]
		},
		"jsonValidation": [
			{
				"fileMatch": ".vscode/settings.json",
				"url": "./schemas/config.schema.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "rimraf out && tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"format": "biome format --write",
		"lint": "biome lint --write",
		"lint:check": "biome check --write",
		"test": "node ./out/test/runTest.js",
		"compodoc": "npx compodoc -p tsconfig.doc.json -d compodoc --theme readthedocs -s",
		"prepare": "husky"
	},
	"devDependencies": {
		"@biomejs/biome": "1.9.4",
		"@commitlint/cli": "^19.8.1",
		"@commitlint/config-conventional": "^19.8.1",
		"@compodoc/compodoc": "^1.1.26",
		"@types/mocha": "^10.0.10",
		"@types/mustache": "^4.2.5",
		"@types/node": "^22.16.4",
		"@types/vscode": "^1.88.0",
		"@vscode/l10n-dev": "^0.0.35",
		"@vscode/test-cli": "^0.0.10",
		"@vscode/test-electron": "^2.5.2",
		"husky": "^9.1.7",
		"lint-staged": "^15.5.2",
		"mocha": "^10.8.2",
		"rimraf": "^6.0.1",
		"typescript": "^5.8.3",
		"vscode-test": "^1.6.1"
	},
	"dependencies": {
		"fast-glob": "^3.3.3",
		"ignore": "^7.0.5",
		"mustache": "^4.2.0",
		"p-limit": "^6.2.0",
		"vscode-marketplace-client": "^1.1.0"
	}
}
